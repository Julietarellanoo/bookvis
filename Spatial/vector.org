#+PROPERTY:  header-args :session *R* :tangle ../docs/R/vector.R :eval no-export
#+OPTIONS: ^:nil
#+BIND: org-latex-image-default-height "0.45\\textheight"

#+begin_src R :exports none :tangle no
setwd('~/github/bookvis/')
#+end_src

#+begin_src R :exports none  
##################################################################
## Initial configuration
##################################################################
## Clone or download the repository and set the working directory
## with setwd to the folder where the repository is located.
#+end_src


Many objects in our natural environment exhibit directional
features that are naturally represented by vector data. Vector
fields, commonly found in science and engineering, describe the
spatial distribution of a vector variable such as fluid flow or
electromagnetic forces. A suitable visualization method has to
display both the magnitude and the direction of the vectors at any
point.

* Introduction

This chapter illustrates two visualization techniques, arrow plots and
stream lines, with the help of the wind direction and speed forecast
published by MeteoGalicia (see Section ref:sec:animationST_var for
details). This vector field is encoded in a =RasterStack= object with
two layers: wind speed or vector magnitude, and wind direction or
vector direction.

#+INDEX: Packages!rasterVis@\texttt{rasterVis}
#+INDEX: Packages!raster@\texttt{raster}
#+INDEX: Data!Wind speed
#+INDEX: Data!MeteoGalicia

#+begin_src R 
library(raster)
library(rasterVis)

## Local vector direction 
wDir <- raster('data/wDir')/180*pi
## Local vector magnitude
wSpeed <- raster('data/wSpeed')
## Vector field encoded in a RasterStack with two layers, magnitude
## and direction
windField <- stack(wSpeed, wDir)
names(windField) <- c('magnitude', 'direction')
#+end_src

* Arrow Plot
label:sec:vectorplot
#+begin_src R :exports none
##################################################################
## Arrow plot
##################################################################
#+end_src
A frequent vector visualization technique is the arrow plot, which
draws a small arrow at discrete points within the vector field
(Figure ref:fig:vectorplot). This approach is best suited for
small datasets. If the grid of discrete points gets too dense or
if the variations in magnitude are too big, the images tend to be
visually confusing.

The =rasterVis= package includes the function =vectorplot=, based on
=lattice=[fn:1]. This function is able to display vector fields computed
from a =Raster= object. Moreover, as the next example illustrates,
this function displays =RasterStack= and =RasterBrick= objects with
two layers encoding a vector field, slope (local vector magnitude) and
aspect (local vector direction).
#+begin_src R :results output graphics :exports both :file figs/vectorplot.pdf
vectorTheme <- BTCTheme(regions = list(alpha = 0.7))

vectorplot(windField,
           isField = TRUE, ##RasterStack is a vector field
           aspX = 5, aspY = 5, ##Multipliers to adjust the relation
                               ##between slope/aspect and
                               ##horizontal/vertical displacements in
                               ##the figure.
           scaleSlope = FALSE, ## Slope values are *not* scaled
           par.settings = vectorTheme, 
           colorkey = FALSE,
           scales = list(draw = FALSE))
#+end_src

#+CAPTION: Arrow plot of the wind vector field. label:fig:vectorplot
#+RESULTS:
[[file:figs/vectorplot.pdf]]

* Streamlines
#+begin_src R :exports none
##################################################################
## Streamlines
##################################################################
#+end_src

Another solution is to depict the directional structure of the vector
field by its integral curves, also denoted as flow lines or
streamlines. There are a variety of algorithms to produce such
visualization. The =streamplot= function of =rasterVis= displays
streamlines with a procedure inspired by the FROLIC algorithm: For
each point, /droplet/, of a jittered regular grid, a short streamline
portion, /streamlet/, is calculated by integrating the underlying
vector field at that point. The main color of each streamlet indicates
local vector magnitude. Streamlets are composed of points whose sizes,
positions, and color degradation encode the local vector direction
(Figure ref:fig:streamplot).


#+begin_src R :results output graphics :exports both :file figs/streamplot.pdf
myTheme <- streamTheme(
    region = rev(brewer.pal(n = 4, "Greys")),
    symbol = rev(brewer.pal(n = 9, "Blues")))

streamplot(windField, isField = TRUE,
           par.settings = myTheme,
           droplet = list(pc = 12),
           streamlet = list(L = 5, h = 5),
           scales = list(draw = FALSE),
           panel = panel.levelplot.raster)
#+end_src

#+CAPTION: Streamlines of the wind vector field. label:fig:streamplot
#+RESULTS:
[[file:figs/streamplot.pdf]]

The magic of Figure ref:fig:streamplot is that it is able to show the
underlying physical structure of the spatial region only displaying
wind speed and direction. It is easy to recognize the Iberian
Peninsula surrounded by strong winds along the eastern and northern
coasts. Another feature easily distinguishable is the Strait of
Gibraltar, a channel that connects the Atlantic Ocean to the
Mediterranean Sea between the south of Spain and the north of
Morocco. Also apparent are the Pyrenees mountains and some of the
river valleys.

* Footnotes

[fn:1] A =ggplot2= solution is available in the =ggquiver= package (https://github.com/mitchelloharawild/ggquiver), although it does not understand =Raster= objects.


