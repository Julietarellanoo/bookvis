#+PROPERTY:  header-args :session *R :tangle /home/oscar/R/spacetimeVis/vector.R :eval no-export
#+OPTIONS: ^:nil
#+BIND: org-latex-image-default-height "0.45\\textheight"

#+begin_src R :exports none
  ##################################################################
  ## Source code for the book: "Displaying time series, spatial and
  ## space-time data with R"
  
  ## Copyright (C) 2013-2012 Oscar Perpiñán Lamigueiro
  
  ## This program is free software you can redistribute it and/or modify
  ## it under the terms of the GNU General Public License as published
  ## by the Free Software Foundation; either version 2 of the License,
  ## or (at your option) any later version.
   
  ## This program is distributed in the hope that it will be useful, but
  ## WITHOUT ANY WARRANTY; without even the implied warranty of
  ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  ## General Public License for more details.
   
  ## You should have received a copy of the GNU General Public License
  ## along with this program; if not, write to the Free Software
  ## Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
  ## 02111-1307, USA.
  ####################################################################
#+end_src

#+begin_src R :exports none :tangle no
  setwd('~/Dropbox/chapman/book/')
#+end_src

#+begin_src R :exports none  
  ##################################################################
  ## Initial configuration
  ##################################################################
  ## Clone or download the repository and set the working directory
  ## with setwd to the folder where the repository is located.
#+end_src

* Vector Fields
<<sec:vector>>

#+begin_src R :exports none
##################################################################
## Vector fields
##################################################################
#+end_src

Many objects in our natural environment exhibit directional
features that are naturally represented by vector data. Vector
fields, commonly found in science and engineering, describe the
spatial distribution of a vector variable such as fluid flow or
electromagnetic forces. A suitable visualization method has to
display both the magnitude and the direction of the vectors at any
point.

This section illustrates two visualization techniques, arrow plots and
stream lines, with the help of the wind direction and speed forecast
published by MeteoGalicia (see Section \ref{sec:animationST} for
details).

#+BEGIN_LaTeX
  \index{Packages!rasterVis@\texttt{rasterVis}}
  \index{Packages!raster@\texttt{raster}}
  \index{Data!Wind Speed}
#+END_LaTeX

#+begin_src R 
  library(raster)
  library(rasterVis)
  
  wDir <- raster('data/wDir')/180*pi
  wSpeed <- raster('data/wSpeed')
  windField <- stack(wSpeed, wDir)
  names(windField) <- c('magnitude', 'direction')
#+end_src

** Arrow Plot
#+begin_src R :exports none
##################################################################
## Arrow plot
##################################################################
#+end_src
A frequent vector visualization technique is the arrow plot, which
draws a small arrow at discrete points within the vector field
(Figure [[fig:vectorplot]]). This approach is best suited for
small datasets. If the grid of discrete points gets too dense or
if the variations in magnitude are too big, the images tend to be
visually confusing.

#+BEGIN_LaTeX
  \index{vectorplot@\texttt{vectorplot}}
#+END_LaTeX
#+begin_src R :results output graphics :exports both :file figs/vectorplot.pdf
  vectorplot(windField, isField=TRUE, par.settings=BTCTheme(),
             colorkey=FALSE, scales=list(draw=FALSE))
#+end_src

#+CAPTION: Arrow plot of the wind vector field.
#+LABEL: fig:vectorplot
#+RESULTS:
[[file:figs/vectorplot.pdf]]

** Streamlines
#+begin_src R :exports none
##################################################################
## Streamlines
##################################################################
#+end_src

Another solution is to depict the directional structure of the vector
field by its integral curves, also denoted as flow lines or
streamlines. There are a variety of algorithms to produce such
visualization. The =streamplot= function of =rasterVis= displays
streamlines with a procedure inspired by the FROLIC algorithm: For
each point, /droplet/, of a jittered regular grid, a short streamline
portion, /streamlet/, is calculated by integrating the underlying
vector field at that point. The main color of each streamlet indicates
local vector magnitude. Streamlets are composed of points whose sizes,
positions, and color degradation encode the local vector direction
(Figure [[fig:streamplot]]).

#+BEGIN_LaTeX
  \index{streamplot@\texttt{streamplot}}
  \index{brewer.pal@\texttt{brewer.pal}}
#+END_LaTeX
#+begin_src R :results output graphics :exports both :file figs/streamplot.pdf
  myTheme <- streamTheme(region=rev(brewer.pal(n=4, name='Greys')),
                                      symbol=BTC(n=9, beg=20))
  streamplot(windField, isField=TRUE,
             par.settings=myTheme,
             droplet=list(pc=12),
             streamlet=list(L=5, h=5),
             scales=list(draw=FALSE),
             panel=panel.levelplot.raster)
#+end_src

#+CAPTION: Streamlines of the wind vector field.
#+LABEL: fig:streamplot
#+RESULTS:
[[file:figs/streamplot.pdf]]

The magic of Figure [[fig:streamplot]] is that it is able to show the
underlying physical structure of the spatial region only displaying
wind speed and direction. It is easy to recognize the Iberian
Peninsula surrounded by strong winds along the eastern and northern
coasts. Another feature easily distinguishable is the Strait of
Gibraltar, a channel that connects the Atlantic Ocean to the
Mediterranean Sea between the south of Spain and the north of
Morocco. Also apparent are the Pyrenees mountains and some of the
river valleys.


