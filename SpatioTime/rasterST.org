#+PROPERTY:  header-args :session *R* :tangle /home/oscar/github/spacetime-vis/rasterST.R :eval no-export
#+OPTIONS: ^:nil
#+BIND: org-export-latex-image-default-option "height=0.4\\textheight"

#+begin_src R :exports none
  ##################################################################
  ## Source code for the book: "Displaying time series, spatial and
  ## space-time data with R"
  
  ## Copyright (C) 2013-2012 Oscar Perpiñán Lamigueiro
  
  ## This program is free software you can redistribute it and/or modify
  ## it under the terms of the GNU General Public License as published
  ## by the Free Software Foundation; either version 2 of the License,
  ## or (at your option) any later version.
   
  ## This program is distributed in the hope that it will be useful, but
  ## WITHOUT ANY WARRANTY; without even the implied warranty of
  ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  ## General Public License for more details.
   
  ## You should have received a copy of the GNU General Public License
  ## along with this program; if not, write to the Free Software
  ## Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
  ## 02111-1307, USA.
  ####################################################################
#+end_src

#+begin_src R :exports none :tangle no
  setwd('~/Dropbox/chapman/book/')

#+end_src

#+begin_src R :exports none  
  ##################################################################
  ## Initial configuration
  ##################################################################
  ## Clone or download the repository and set the working directory
  ## with setwd to the folder where the repository is located.

  Sys.setlocale("LC_TIME", 'C')
#+end_src

* Introduction

A space-time raster dataset is a collection of raster layers indexed
by time, or in other words, a time series of raster maps. The =raster=
package defines the classes =RasterStack= and =RasterBrick= to build
multilayer rasters. The index of the collection can be set with the
function =setZ= (which is not restricted to time indexes). The
=rasterVis= packages provide several methods to display space-time
rasters.

** Data
#+begin_src R :exports none 
##################################################################
## CMSAF Data
##################################################################
#+end_src

Throughout this chapter we will work with a multilayer raster of daily
solar radiation estimates from CM SAF (section \ref{sec:CMSAF}) falling in
the region of Galicia (north of Spain) during 2011. These data are
arranged in a =RasterBrick= with 365 layers using =brick= and time
indexed with =setZ=.

#+BEGIN_LaTeX
\index{Packages!raster@\texttt{raster}}
\index{Packages!zoo@\texttt{zoo}}
\index{Packages!rasterVis@\texttt{rasterVis}}
\index{setZ@\texttt{setZ}}
#+END_LaTeX

#+begin_src R 
  library(raster)
  library(zoo)
  library(rasterVis)
  
  SISdm <- brick('data/SISgal')
  
  timeIndex <- seq(as.Date('2011-01-01'), by='day', length=365)
  SISdm <- setZ(SISdm, timeIndex)
  names(SISdm) <- format(timeIndex, '%a_%Y%m%d')
#+end_src

* Level Plots

#+begin_src R :exports none
##################################################################
## Levelplot
##################################################################
#+end_src
This multilayer raster can be displayed with each snapshot in a
panel using the small-multiple technique. The problem with this
approach is that only a limited number of panels can be correctly
displayed on one page. In this example, we print the first 12
days of the sequence (Figure [[fig:SISdm]]).

#+BEGIN_LaTeX
\index{levelplot@\texttt{levelplot}}
#+END_LaTeX

#+begin_src R :results output graphics :exports both :file figs/SISdm.pdf
  levelplot(SISdm, layers=1:12, panel=panel.levelplot.raster)
#+end_src

#+CAPTION: Level plot of daily averages of solar radiation.
#+LABEL: fig:SISdm
#+RESULTS:
[[file:figs/SISdm.pdf]]

When the number of layers is very high, a partial solution is to
aggregate the data, grouping the layers according to a time
condition. For example, we can build a new space-time raster with
the monthly averages using =zApply= and =as.yearmon=. This raster
can be completely displayed on one page (Figure [[fig:SISmm]]),
although part of the information of the original data is lost in
the aggregation procedure.

#+BEGIN_LaTeX
\index{zApply@\texttt{zApply}}
#+END_LaTeX

#+begin_src R 
  SISmm <- zApply(SISdm, by=as.yearmon, fun='mean')
#+end_src

#+begin_src R :results output graphics :exports both :file figs/SISmm.pdf
  levelplot(SISmm, panel=panel.levelplot.raster)
#+end_src

#+CAPTION: Level plot of monthly averages of solar radiation.
#+LABEL: fig:SISmm
#+RESULTS:
[[file:figs/SISmm.pdf]]

* Graphical Exploratory Data Analysis

#+begin_src R :exports none
  ##################################################################
  ## Exploratory graphics
  ##################################################################
#+end_src
There are other graphical tools that complement the previous maps. The
scatterplot and the matrix of scatterplots, the histogram and kernel
density plot, and the boxplot are among the most important tools in
the frame of the Exploratory Data Analysis approach. Some of them were
previously used with a spatial raster (Chapter \ref{cha:raster}). In
this section we will use the histogram (Figure [[fig:SISdm_hist]]),
the violin plot (a combination of a boxplot and a kernel density plot)
(Figure [[fig:SISdm_boxplot]]), and the matrix of scatterplots
(section \ref{SEC:groupVariable}, Figure [[fig:SISmm_splom]]).

#+BEGIN_LaTeX
\index{histogram@\texttt{histogram}}
#+END_LaTeX

#+begin_src R :results output graphics :exports both :file figs/SISdm_histogram.pdf
  histogram(SISdm, FUN=as.yearmon)
#+end_src

#+CAPTION: Histogram of monthly distribution of solar radiation.
#+LABEL: fig:SISdm_hist
#+RESULTS:
[[file:figs/SISdm_histogram.pdf]]


#+BEGIN_LaTeX
\index{bwplot@\texttt{bwplot}}
#+END_LaTeX
#+begin_src R :results output graphics :exports both :file figs/SISdm_boxplot.pdf
  bwplot(SISdm, FUN=as.yearmon)
#+end_src

#+CAPTION: Violin plot of monthly distribution of solar radiation.
#+LABEL: fig:SISdm_boxplot
#+RESULTS:
[[file:figs/SISdm_boxplot.pdf]]

#+BEGIN_LaTeX
\index{splom@\texttt{splom}}
#+END_LaTeX

#+begin_src R :results output graphics :exports both :file figs/SISmm_splom.png :width 4000 :height 4000 :res 600
  splom(SISmm, xlab='', plot.loess=TRUE)
#+end_src

#+CAPTION: Scatterplot matrix of monthly averages together with their kernel density estimations in the diagonal frames.
#+LABEL: fig:SISmm_splom
#+RESULTS:
[[file:figs/SISmm_splom.png]]


Both the histogram and the violin plot show that daily solar
irradiation is bimodal almost every month. This is related to the
predominance of clear sky and overcast days, with several partly
cloudy days between these modes. This geographical region receives
higher irradiation levels from June to September, and both the levels
and the shape of the probability distribution contrast sharply with
the winter.

The matrix of scatterplots displays a quasilinear relationship
between the central months due to the predominance of clear sky
conditions. However, the relationships involving winter months become
strongly nonlinear due to the presence of clouds.

* Space-Time and Time Series Plots
#+begin_src R :exports none
##################################################################
## Space-time and time series plots
##################################################################
#+end_src

The level plots of Figures [[fig:SISdm]] and [[fig:SISmm]]
display the full 3D space-time with a grid of panels where each layer
is printed. In other words, the raster is sliced, and the collection of
pieces is shown in a table. In the section \ref{sec:animationST}, this
collection of layers will be displayed sequentially like frames of a
movie to build an animation. In this section, the 3D raster is reduced
to a 2D matrix with spatial aggregation following a certain
direction. For example, Figure [[fig:SISdm_hovmoller_lat]]
displays with colors the averaged value of the raster for each
latitude zone (using the default value of the argument =dirXY=) with
time on the vertical axis.

#+BEGIN_LaTeX
\index{hovmoller@\texttt{hovmoller}}
#+END_LaTeX

#+begin_src R :results output graphics :exports both :file figs/SISdm_hovmoller_lat.pdf
  hovmoller(SISdm, par.settings=BTCTheme())
#+end_src

#+CAPTION: Hovmöller graphic displaying the time evolution of the average solar radiation for each latitude zone.
#+LABEL: fig:SISdm_hovmoller_lat
#+RESULTS:
[[file:figs/SISdm_hovmoller_lat.pdf]]

On the other hand, this 2D matrix can be conceived as a multivariate
time series with each aggregated zone conforming to a different variable of
the time series. This approach is followed by the =xyplot= (Figure
[[fig:SISmm_xyplot]]) and =horizonplot= (Figure [[fig:SISdm_horizonplot]])
methods, which reproduce the procedures described in Chapter
\ref{cha:timeHorizontalAxis} to display multivariate time series.

#+BEGIN_LaTeX
\index{xyplot@\texttt{xyplot}}
#+END_LaTeX

#+begin_src R :results output graphics :exports both :file figs/SISmm_xyplot.png :width 2000 :height 2000 :res 300
  xyplot(SISdm, digits=1, col='black', lwd=0.2, alpha=0.6)
#+end_src

#+CAPTION: Time graph of the average solar radiation for each latitude zone. Each line represents a latitude band.
#+LABEL: fig:SISmm_xyplot
#+RESULTS:
[[file:figs/SISmm_xyplot.png]]

#+BEGIN_LaTeX
\index{horizonplot@\texttt{horizonplot}}
#+END_LaTeX

#+begin_src R :results output graphics :exports both :file figs/SISdm_horizonplot.pdf
  horizonplot(SISdm, digits=1,
              col.regions=rev(brewer.pal(n=6, 'PuOr')),
              xlab='', ylab='Latitude')
#+end_src

#+CAPTION: Horizon graph of the average solar radiation for each latitude zone.
#+LABEL: fig:SISdm_horizonplot
#+RESULTS:
[[file:figs/SISdm_horizonplot.pdf]]

These three figures highlight the stational behavior of the solar
radiation, with higher values during the central months. It is
interesting to note that (Figure [[fig:SISdm_horizonplot]]) the
radiation values around the equinoxes fluctuate near the yearly
average value of each latitude region.

* Animation
\label{sec:animationST}

#+begin_src R :exports none
##################################################################
## Animation
##################################################################
#+end_src


A different approach is to plot the individual layers of the
space-time raster sequentially as movie frames to produce an
animation. The procedure is quite simple:
- Plot each layer of the raster to produce a collection of graphic
  files.
- Join these files as a sequence of frames with a suitable tool (for
  example, =ffmpeg=) to create a movie file[fn:3][fn:4].


The effectiveness of this visualization procedure is partly related to
the similitude between consecutive frames. If the frames of the
sequence diverge excessively from one to another, the user will
experience difficulties to perceive any relationship between them. On
the other hand, if the transitions between layers are smooth enough,
the frames will be perceived as conforming to a whole story; and,
moreover, the user will be able to spot both the stable patterns and
the important variations.

** Data
#+begin_src R :exports none
##################################################################
## Data
##################################################################
#+end_src
The daily solar radiation CM-SAF data do not meet the condition of
a smooth transition between layers. The changes between the consecutive
snapshots of daily radiation are too abrupt to be glued one after
another. We will work with a different dataset in this section.

The THREDSS server[fn:1] of Meteogalicia[fn:2] provides access
through different protocols to the output of a Weather Research
and Forecasting (WRF) model, a mesoscale numerical weather
prediction system. Among the set of available variables we will
use the forecast of hourly cloud cover at low and mid levels. This
space-time raster has a time horizon of 96 hours and a spatial
resolution of 12 kilometers.

#+begin_src R
  cft <- brick('data/cft_20130417_0000.nc')
  ## use memory instead of file
  cft[] <- getValues(cft)
  ## set projection
  projLCC2d <- "+proj=lcc +lon_0=-14.1 +lat_0=34.823 +lat_1=43 +lat_2=43 +x_0=536402.3 +y_0=-18558.61 +units=km +ellps=WGS84"
  projection(cft) <- projLCC2d
  #set time index
  timeIndex <- seq(as.POSIXct('2013-04-17 01:00:00', tz='UTC'), length=96, by='hour')
  cft <- setZ(cft, timeIndex)
  names(cft) <- format(timeIndex, 'D%d_H%H')
#+end_src


** Spatial Context: Administrative Boundaries
#+begin_src R :exports none
##################################################################
## Spatial context: administrative boundaries
##################################################################
#+end_src
Let's provide the spatial context with the countries
boundaries, extracted from the =worldHires= database of the =maps=
and =mapdata= packages.

#+BEGIN_LaTeX
\index{Packages!maptools@\texttt{maptools}}
\index{Packages!mapdata@\texttt{mapdata}}
\index{Packages!maps@\texttt{maps}}
\index{Packages!rgdal@\texttt{rgdal}}
\index{map2SpatialLines@\texttt{map2SpatialLines}}
\index{spTransform@\texttt{spTransform}}
#+END_LaTeX

#+begin_src R 
  library(maptools)
  library(rgdal)
  library(maps)
  library(mapdata)
  
  
  projLL <- CRS('+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0')
  cftLL <- projectExtent(cft, projLL)
  cftExt <- as.vector(bbox(cftLL))
  boundaries <- map('worldHires',
                    xlim=cftExt[c(1,3)], ylim=cftExt[c(2,4)],
                    plot=FALSE)
  boundaries <- map2SpatialLines(boundaries, proj4string=projLL)
  boundaries <- spTransform(boundaries, CRS(projLCC2d))
#+end_src

#+RESULTS:

** Producing the Frames and the Movie
#+begin_src R :exports none
##################################################################
## Producing frames and movie
##################################################################
#+end_src
The next step is to produce the collection of frames. We will create a
file with each layer of the =RasterBrick= using the =levelplot=
function. This function provides the argument =layout= to control the
arrangement of a multipanel display. If it is set to =c(1,1)=, a
different page is created for each layer.

#+BEGIN_LaTeX
\index{brewer.pal@\texttt{brewer.pal}}
#+END_LaTeX
#+begin_src R 
  cloudTheme <- rasterTheme(region=brewer.pal(n=9, 'Blues'))
#+end_src

#+BEGIN_LaTeX
\index{levelplot@\texttt{levelplot}}
#+END_LaTeX

#+begin_src R :eval no-export
  tmp <- tempdir()
  trellis.device(png, file=paste0(tmp, '/Rplot%02d.png'),
                        res=300, width=1500, height=1500)
  levelplot(cft, layout=c(1, 1), par.settings=cloudTheme) +
      layer(sp.lines(boundaries, lwd=0.6))
  dev.off()
#+end_src

A suitable tool to concatenate these frames and create the movie is
=ffmpeg=, a free cross-platform software to record, convert, and stream
audio and video[fn:5]. The resulting movie is available from the book
website.

#+BEGIN_LaTeX
\index{ffmpeg@\texttt{ffmpeg}}
#+END_LaTeX

#+begin_src R :eval no-export
  old <- setwd(tmp)
  ## Create a movie with ffmpeg using 6 frames per second a bitrate of 300kbs
  movieCMD <- 'ffmpeg -r 6 -b 300k -i Rplot%02d.png output.mp4'
  system(movieCMD)
  file.remove(dir(pattern='Rplot'))
  file.copy('output.mp4', paste0(old, '/figs/cft.mp4'), overwrite=TRUE)
  setwd(old)
#+end_src

** Static Image
#+begin_src R :exports none
##################################################################
## Static image
##################################################################
#+end_src
Figure [[fig:cft]] shows a sequence of twenty-four snapshots (second day
of the forecast series) of the movie. This graphic is also created
with =levelplot= but now using the argument =layers= to choose a
subset of the layers, and with a different value for =layout= to
display a matrix of twenty-four panels.
#+begin_src R :results output graphics :exports both :file figs/cft.pdf
  levelplot(cft, layers=25:48, layout=c(6, 4),
            par.settings=cloudTheme,
            names.attr=paste0(sprintf('%02d', 1:24), 'h'),
            panel=panel.levelplot.raster) +
      layer(sp.lines(boundaries, lwd=0.6))
#+end_src

#+CAPTION: Forecast of hourly cloud cover at low and mid levels.
#+LABEL: fig:cft
#+RESULTS:
[[file:figs/cft.pdf]]

The movie and the static image are complementary tools and should be
used together. Watching the movie you will perceive the cloud transit
from Galicia to the Pyrenees gradually dissolving over the Cantabrian
region. On the other hand, with Figure [[fig:cft]] you can locate the
position of a group of clouds in a certain hour and simultaneously
observe the relationship of that position with the evolution during
that period. With the movie you will concentrate your attention on the
movement. With small multiple pictures, your focus will be on
positions and relations. You should use both graphical tools to grasp
the entire 3D dataset.

# #+begin_src sh :results silent :exports none
#   mogrify -density 200 -format png figs/*.pdf 
# #+end_src


* Footnotes

[fn:1] http://mandeo.meteogalicia.es/thredds/catalogos/WRF_2D/catalog.html

[fn:2] http://www.meteogalicia.es

[fn:3] The =animation= package \cite{Xie2013} defines several functions to wrap =ffmpeg= and =convert= from ImageMagick.

[fn:4] An alternative method is the LaTeX animate package, which
    provides an interface to create portable JavaScript-driven PDF
    animations from rasterized image files.

[fn:5] http://www.ffmpeg.org/


